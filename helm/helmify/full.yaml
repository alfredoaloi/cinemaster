apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: backend-claim0
  name: backend-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
    spec:
      containers:
        - args:
            - ./mvnw
            - spring-boot:run
            - -Dspring-boot.run.profiles=mysql
            - -Dspring-boot.run.jvmArguments=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000
          env:
            - name: MYSQL_URL
              value: jdbc:mysql://mysqlserver/cinemaster
            - name: SERVER_PORT
              value: "8080"
          image: alfral/cinemaster_backend:latest
          name: backend
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: backend-claim0
      restartPolicy: Always
      volumes:
        - name: backend-claim0
          persistentVolumeClaim:
            claimName: backend-claim0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: backend
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: frontend-claim0
  name: frontend-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: frontend-claim1
  name: frontend-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
    spec:
      containers:
        - args:
            - sh
            - -c
            - npm start
          image: alfral/cinemaster_frontend:latest
          name: frontend
          ports:
            - containerPort: 4200
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: frontend-claim0
            - mountPath: /node_modules
              name: frontend-claim1
      restartPolicy: Always
      volumes:
        - name: frontend-claim0
          persistentVolumeClaim:
            claimName: frontend-claim0
        - name: frontend-claim1
          persistentVolumeClaim:
            claimName: frontend-claim1
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  ports:
    - name: "4200"
      port: 4200
      targetPort: 4200
  selector:
    io.kompose.service: frontend
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-config
  name: mysql-config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-data
  name: mysql-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqlserver
  name: mysqlserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqlserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mysqlserver
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: cinemaster
            - name: MYSQL_PASSWORD
              value: cinemaster
            - name: MYSQL_ROOT_PASSWORD
              value: cinemaster
            - name: MYSQL_USER
              value: cinemaster
          image: alfral/mysql:latest
          name: mysqlserver
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
            - mountPath: /etc/mysql/conf.d
              name: mysql-config
      restartPolicy: Always
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
        - name: mysql-config
          persistentVolumeClaim:
            claimName: mysql-config
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\AloiAl\Desktop\cinemaster\kompose.exe convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqlserver
  name: mysqlserver
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: mysqlserver
status:
  loadBalancer: {}
